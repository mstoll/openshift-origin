{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"_artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "The base URL where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated.",
				"artifactsBaseUrl": ""
			},
			"defaultValue": "https://raw.githubusercontent.com/mstoll/openshift-origin/master"
		},
		"masterVmSize": {
			"type": "string",
			"defaultValue": "Standard_DS3_v2",
			"allowedValues": [
				"Standard_A4", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
				"Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4",
				"Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
				"Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
				"Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
				"Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
				"Standard_D1_v2", "Standard_DS2", "Standard_DS3", "Standard_DS4",
				"Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
				"Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
				"Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2",
				"Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5",
				"Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D16_v3", "Standard_D32_v3", "Standard_D64_v3",
				"Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_D64s_v3",
				"Standard_E2_v3", "Standard_E4_v3", "Standard_E8_v3", "Standard_E16_v3", "Standard_E32_v3", "Standard_E64_v3",
				"Standard_E2s_v3", "Standard_E4s_v3", "Standard_E8s_v3", "Standard_E16s_v3", "Standard_E32s_v3", "Standard_E64s_v3"
			],
			"metadata": {
				"description": "OpenShift Master VM size"
			}
		},
		"nodeVmSize": {
			"type": "string",
			"defaultValue": "Standard_DS3_v2",
			"allowedValues": [
				"Standard_A4", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
				"Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4",
				"Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
				"Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
				"Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
				"Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
				"Standard_D1_v2", "Standard_DS2", "Standard_DS3", "Standard_DS4",
				"Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
				"Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
				"Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2",
				"Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5",
				"Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D16_v3", "Standard_D32_v3", "Standard_D64_v3",
				"Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_D64s_v3",
				"Standard_E2_v3", "Standard_E4_v3", "Standard_E8_v3", "Standard_E16_v3", "Standard_E32_v3", "Standard_E64_v3",
				"Standard_E2s_v3", "Standard_E4s_v3", "Standard_E8s_v3", "Standard_E16s_v3", "Standard_E32s_v3", "Standard_E64s_v3"
			],
			"metadata": {
				"description": "OpenShift Node VM(s) size"
			}
		},
		"infraVmSize": {
			"type": "string",
			"defaultValue": "Standard_DS3_v2",
			"allowedValues": [
				"Standard_A4", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
				"Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4",
				"Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
				"Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
				"Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
				"Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
				"Standard_D1_v2", "Standard_DS2", "Standard_DS3", "Standard_DS4",
				"Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
				"Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
				"Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2",
				"Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5",
				"Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D16_v3", "Standard_D32_v3", "Standard_D64_v3",
				"Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_D64s_v3",
				"Standard_E2_v3", "Standard_E4_v3", "Standard_E8_v3", "Standard_E16_v3", "Standard_E32_v3", "Standard_E64_v3",
				"Standard_E2s_v3", "Standard_E4s_v3", "Standard_E8s_v3", "Standard_E16s_v3", "Standard_E32s_v3", "Standard_E64s_v3"
			],
			"metadata": {
				"description": "OpenShift Infra Node VM(s) size"
			}
		},
		"storageKind": {
			"type": "string",
			"defaultValue": "managed",
			"allowedValues": ["managed", "unmanaged"],
			"metadata": {
				"description": "Use Managed or Unmanaged Disks"
			}
		},
		"openshiftClusterPrefix": {
			"type": "string",
			"defaultValue": "mycluster",
			"minLength": 2,
			"maxLength": 20,
			"metadata": {
				"description": "OpenShift cluster prefix.  Used to generate master, infra and node hostnames.  Maximum of 20 characters."
			}
		},
		"masterInstanceCount": {
			"type": "int",
			"defaultValue": 3,
			"allowedValues": [3, 5],
			"metadata": {
				"description": "Number of OpenShift masters."
			}
		},
		"infraInstanceCount": {
			"type": "int",
			"defaultValue": 2,
			"allowedValues": [2, 3],
			"metadata": {
				"description": "Number of OpenShift infra nodes."
			}
		},
		"nodeInstanceCount": {
			"type": "int",
			"defaultValue": 2,
			"minValue": 1,
			"allowedValues": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],
			"metadata": {
				"description": "Number of OpenShift nodes"
			}
		},
		"dataDiskSize": {
			"type": "int",
			"defaultValue": 64,
			"minValue": 1,
			"allowedValues": [32, 64, 128, 256, 512, 1024, 2048],
			"metadata": {
				"description": "Size of Datadisk in GB for Docker volume"
			}
		},
		"adminUsername": {
			"type": "string",
			"defaultValue": "ocpadmin",
			"minLength": 1,
			"metadata": {
				"description": "Administrator username on all VMs and first user created for OpenShift login"
			}
		},
		"openshiftPassword": {
			"type": "securestring",
			"minLength": 1,
			"metadata": {
				"description": "Password for OpenShift user to login to OpenShift Console"
			}
		},
		"sshPublicKey": {
			"type": "string",
			"metadata": {
				"description": "SSH public key for all VMs"
			}
		},
		"enableMetrics": {
			"type": "string",
			"defaultValue": "false",
			"allowedValues": [
				"true", "false"
			],
			"metadata": {
				"description": "Enable OpenShift Metrics: true or false"
			}
		},
		"enableLogging": {
			"type": "string",
			"defaultValue": "false",
			"allowedValues": [
				"true", "false"
			],
			"metadata": {
				"description": "Enable OpenShift Logging: true or false"
			}
		},
		"enableCockpit": {
			"type": "string",
			"defaultValue": "false",
			"allowedValues": [
				"true", "false"
			],
			"metadata": {
				"description": "Enable Cockpit: true or false"
			}
		},
		"keyVaultResourceGroup": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Resource Group that contains the Key Vault"
			}
		},
		"keyVaultName": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Name of the Key Vault"
			}
		},
		"keyVaultSecret": {
			"type": "securestring",
			"minLength": 1,
			"metadata": {
				"description": "Key Vault Secret Name that contains the Private Key"
			}
		},
		"enableAzure": {
			"type": "string",
			"defaultValue": "false",
			"allowedValues": [
				"true", "false"
			],
			"metadata": {
				"description": "Enable Azure as Cloud Provider - true or false"
			}
		},
		"aadClientId": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Azure AD Client ID"
			}
		},
		"aadClientSecret": {
			"type": "securestring",
			"minLength": 1,
			"metadata": {
				"description": "Azure AD Client Secret"
			}
		},
		"defaultSubDomainType": {
			"type": "string",
			"defaultValue": "nipio",
			"allowedValues": [
				"nipio", "custom"
			],
			"metadata": {
				"description": "Default Subdomain type - nip.io or custom (defined in next parameter)"
			}
		},
		"defaultSubDomain": {
			"type": "string",
			"defaultValue": "contoso.com",
			"metadata": {
				"description": "Default Subdomain for application routing (Wildcard DNS) - must enter something even if you are using nip.io"
			}
		}
		,
		"vnetName": {
			"type": "string",
			"defaultValue": "mdp-poc-network",
			"metadata": {
				"description": "Vnet for the cluster"
			}
		}
		,
		"vnetRGName": {
			"type": "string",
			"defaultValue": "MDP_-_Data_Hub_PoC",
			"metadata": {
				"description": "RG containing the Vnet"
			}
		}
		,
		"masterSubnetName": {
			"type": "string",
			"defaultValue": "masterSubenet",
			"metadata": {
				"description": "Subnet for the masterNodes"
			}
		}
		,
		"nodeSubnetName": {
			"type": "string",
			"defaultValue": "nodeSubenet",
			"metadata": {
				"description": "Subnet for the node Nodes"
			}
		}
		,
		"masterLBIp": {
			"type": "string",
			"defaultValue": "nodeSubenet",
			"metadata": {
				"description": "Subnet for the node Nodes"
			}
		}
		,
		"infraLBIp": {
			"type": "string",
			"defaultValue": "nodeSubenet",
			"metadata": {
				"description": "Subnet for the node Nodes"
			}
		}
		,
		"masterNodeFirstIp": {
			"type": "string",
			"defaultValue": "140",
			"metadata": {
				"description": "first Ip of the master node : 10.79.77.masterNodeFirstIp"
			}
		}
		,
		"infraNodeFirstIp": {
			"type": "int",
			"defaultValue": "145",
			"metadata": {
				"description": "first Ip of the infra node : 10.79.77.infraNodeFirstIp"
			}
		}		
		,
		"nodeNodeFirstIp": {
			"type": "int",
			"defaultValue": "150",
			"metadata": {
				"description": "first Ip of the node node : 10.79.77.nodeNodeFirstIp"
			}
		}		
	},
	"variables": {
		"vnetID": "[resourceId(parameters('vnetRGName'),'Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
	    "masterSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters ('masterSubnetName'))]",
	    "nodeSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters ('nodeSubnetName'))]",
		"location": "[resourceGroup().location]",
		"resourceGroupName": "[resourceGroup().id]",
		"apiVersionCompute": "2017-03-30",
		"apiVersionNetwork": "2017-09-01",
		"apiVersionStorage": "2017-06-01",
		"apiVersionLinkTemplate": "2015-01-01",
		"defaultSubDomain": "[toLower(parameters('defaultSubDomain'))]",
		"namingInfix": "[toLower(parameters('openshiftClusterPrefix'))]",
		"openshiftMasterHostname": "[concat(variables('namingInfix'), '-master')]",
		"openshiftNodeHostname": "[concat(variables('namingInfix'), '-node')]",
		"openshiftInfraHostname": "[concat(variables('namingInfix'), '-infra')]",
		"newStorageAccountMaster": "[concat('master', uniqueString(concat(resourceGroup().id, 'msa')))]",
		"newStorageAccountInfra": "[concat('infra', uniqueString(concat(resourceGroup().id, 'infra')))]",
		"newStorageAccountNodeOs": "[concat('nodeos', uniqueString(concat(resourceGroup().id, 'nodeossa')))]",
		"newStorageAccountNodeData": "[concat('nodedata', uniqueString(concat(resourceGroup().id, 'nodedatasa')))]",
		"diagStorageAccount1": "[concat('diag1', uniqueString(concat(resourceGroup().id, 'dsa1')))]",
		"diagStorageAccount2": "[concat('diag2', uniqueString(concat(resourceGroup().id, 'dsa2')))]",
		"newStorageAccountRegistry": "[concat('registry', uniqueString(concat(resourceGroup().id, 'registry')))]",
		"newStorageAccountPersistentVolume1": "[concat('pv1sa', uniqueString(concat(resourceGroup().id, 'persistentvolume1')))]",
		"newStorageAccountArray": [
			{ "name": "[variables('diagStorageAccount1')]", "tagName": "DiagnosticsStorageAccount", "skuName": "[variables('storageSkuObject').diagnostics.skuName]", "skuTier": "[variables('storageSkuObject').diagnostics.skuTier]" },
			{ "name": "[variables('diagStorageAccount2')]", "tagName": "DiagnosticsStorageAccount", "skuName": "[variables('storageSkuObject').diagnostics.skuName]", "skuTier": "[variables('storageSkuObject').diagnostics.skuTier]" },
			{ "name": "[variables('newStorageAccountRegistry')]", "tagName": "RegistryStorageAccount", "skuName": "[variables('storageSkuObject').registry.skuName]", "skuTier": "[variables('storageSkuObject').registry.skuTier]" },
			{ "name": "[variables('newStorageAccountMaster')]", "tagName": "MasterStorageAccount", "skuName": "[variables('storageSkuObject').master.skuName]", "skuTier": "[variables('storageSkuObject').master.skuTier]" },
			{ "name": "[variables('newStorageAccountInfra')]", "tagName": "InfraStorageAccount", "skuName": "[variables('storageSkuObject').infra.skuName]", "skuTier": "[variables('storageSkuObject').infra.skuTier]" },
			{ "name": "[variables('newStorageAccountNodeOs')]", "tagName": "NodeStorageAccount", "skuName": "[variables('storageSkuObject').node.skuName]", "skuTier": "[variables('storageSkuObject').node.skuTier]" },
			{ "name": "[variables('newStorageAccountNodeData')]", "tagName": "NodeStorageAccount", "skuName": "[variables('storageSkuObject').node.skuName]", "skuTier": "[variables('storageSkuObject').node.skuTier]" },
			{ "name": "[variables('newStorageAccountPersistentVolume1')]", "tagName": "PersistentVolume1StorageAccount", "skuName": "[variables('storageSkuObject').persistent.skuName]", "skuTier": "[variables('storageSkuObject').persistent.skuTier]" }
		],
		"availabilitySetArray": [
			{ "name": "masteravailabilityset", "tagName": "MasterAvailabilitySet" },
			{ "name": "infraavailabilityset", "tagName": "InfraAvailabilitySet" },
			{ "name": "nodeavailabilityset", "tagName": "NodeAvailabilitySet" }
		],
		"unmanagedAvailabilitySetSku": "Classic",
		"managedAvailabilitySetSku": "Aligned",
		"availabilitySetSku": "[concat(parameters('storageKind'), 'AvailabilitySetSku')]",
		"unmanagedPlatformFaultDomainCount": 3,
		"managedPlatformFaultDomainCount": 2,
		"platformFaultDomainCount": "[concat(parameters('storageKind'), 'PlatformFaultDomainCount')]",
		"storageSkuObject": {
			"master": {
				"skuName": "[variables('vmSizesMap')[parameters('masterVmSize')].storageAccountType]",
				"skuTier": "[variables('vmSizesMap')[parameters('masterVmSize')].storageAccountTier]"
			},
			"infra": {
				"skuName": "[variables('vmSizesMap')[parameters('infraVmSize')].storageAccountType]",
				"skuTier": "[variables('vmSizesMap')[parameters('infraVmSize')].storageAccountTier]"
			},
			"node": {
				"skuName": "[variables('vmSizesMap')[parameters('nodeVmSize')].storageAccountType]",
				"skuTier": "[variables('vmSizesMap')[parameters('nodeVmSize')].storageAccountTier]"
			},
			"diagnostics": {
				"skuName": "Standard_LRS",
				"skuTier": "Standard"
			},
			"registry": {
				"skuName": "Standard_LRS",
				"skuTier": "Standard"
			},
			"persistent": {
				"skuName": "Standard_LRS",
				"skuTier": "Standard"
			}
		},
		"managedStorageCount": 3,
		"unmanagedStorageCount": "[length(variables('newStorageAccountArray'))]",
		"storageLoopCount": "[concat(parameters('storageKind'), 'StorageCount')]",
		"unmanagedMasterUri": "[variables('newStorageAccountMaster')]",
		"managedMasterUri": "[variables('diagStorageAccount1')]",
		"unmanagedInfraUri": "[variables('newStorageAccountInfra')]",
		"managedInfraUri": "[variables('diagStorageAccount1')]",
		"unmanagedNodeOsUri": "[variables('newStorageAccountNodeOs')]",
		"managedNodeOsUri": "[variables('diagStorageAccount1')]",
		"unmanagedNodeDataUri": "[variables('newStorageAccountNodeData')]",
		"managedNodeDataUri": "[variables('diagStorageAccount1')]",
		
		"masterUri": "[concat(parameters('storageKind'), 'MasterUri')]",
		"infraUri": "[concat(parameters('storageKind'), 'InfraUri')]",
		"nodeOsUri": "[concat(parameters('storageKind'), 'NodeOsUri')]",
		"nodeDataUri": "[concat(parameters('storageKind'), 'NodeDataUri')]",
		

		"openshiftMasterPublicIpDnsLabel": "[concat('masterdns', uniqueString(concat(resourceGroup().id, 'master')))]",

		"masterLoadBalancerName": "[concat(variables('openshiftMasterHostname'), 'lb')]",
		"masterLbId": "[resourceId('Microsoft.Network/loadBalancers', variables('masterLoadBalancerName'))]",
		"masterLbFrontEndConfigId": "[concat(variables('masterLbId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]",
		"masterLbBackendPoolId": "[concat(variables('masterLbId'),'/backendAddressPools/loadBalancerBackend')]",
		"masterLbHttpProbeId": "[concat(variables('masterLbId'),'/probes/httpProbe')]",
		"masterLb8443ProbeId": "[concat(variables('masterLbId'),'/probes/8443Probe')]",
		"masterLbCockpitProbeId": "[concat(variables('masterLbId'),'/probes/cockpitProbe')]",

		"infraLoadBalancerName": "[concat(variables('openshiftInfraHostname'), 'lb')]",
		"infraLbId": "[resourceId('Microsoft.Network/loadBalancers', variables('infraLoadBalancerName'))]",
		"infraLbFrontEndConfigId": "[concat(variables('infraLbId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]",
		"infraLbBackendPoolId": "[concat(variables('infraLbId'),'/backendAddressPools/loadBalancerBackend')]",
		"infraLbHttpProbeId": "[concat(variables('infraLbId'),'/probes/httpProbe')]",
		"infraLbHttpsProbeId": "[concat(variables('infraLbId'),'/probes/httpsProbe')]",
		"infraLbCockpitProbeId": "[concat(variables('infraLbId'),'/probes/cockpitProbe')]",
		"imageReference": {
			"publisher": "Openlogic",
			"offer": "CentOS",
			"sku": "7.4",
			"version": "latest"
		},
		"redHatTags": {
			"app": "OpenShiftOrigin",
			"provider": "9d2c71fc-96ba-4b4a-93b3-14def5bc96fc"
		},
		"singlequote": "'",
		"sshKeyPath": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
		"nodePrepScriptUrl": "[concat(parameters('_artifactsLocation'), '/scripts/nodePrep.sh')]",
		"masterPrepScriptUrl": "[concat(parameters('_artifactsLocation'), '/scripts/masterPrep.sh')]",
		"openshiftDeploymentScriptUrl": "[concat(parameters('_artifactsLocation'), '/scripts/deployOpenShift.sh')]",
		"nodePrepScriptFileName": "nodePrep.sh",
		"masterPrepScriptFileName": "masterPrep.sh",
		"openshiftDeploymentScriptFileName": "deployOpenShift.sh",
		"clusterNodeDeploymentTemplateUrl": "[concat(parameters('_artifactsLocation'), '/nested/clusternode.json')]",
		"openshiftDeploymentTemplateUrl": "[concat(parameters('_artifactsLocation'), '/nested/openshiftdeploy.json')]",
		"vmSizesMap": {
			"Standard_A4": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_A5": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_A6": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_A7": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_A8": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_A9": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_A10": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_A11": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D1": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D2": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D4": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D11": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D12": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D13": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D14": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D1_v2": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D2_v2": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D3_v2": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D4_v2": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D5_v2": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D11_v2": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D12_v2": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D13_v2": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D14_v2": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_G1": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_G2": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_G3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_G4": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_G5": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_DS1": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS4": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS11": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS12": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS13": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS14": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS1_v2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS2_v2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS3_v2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS4_v2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS5_v2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS11_v2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS12_v2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS13_v2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS14_v2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_DS15_v2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_GS1": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_GS2": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_GS3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_GS4": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_GS5": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_D2_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D4_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D8_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D16_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D32_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D64_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_D2s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_D4s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_D8s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_D16s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_D32s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_D64s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_E2_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_E4_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_E8_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_E16_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_E32_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_E64_v3": {
				"storageAccountType": "Standard_LRS",
				"storageAccountTier": "Standard"
			},
			"Standard_E2s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_E4s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_E8s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_E16s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_E32s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			},
			"Standard_E64s_v3": {
				"storageAccountType": "Premium_LRS",
				"storageAccountTier": "Premium"
			}
		}
	},
	"resources": [
		    
		 
		{
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('masterLoadBalancerName')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"tags": {
				"displayName": "OpenShiftMasterLB",
				"provider": "[variables('redHatTags').provider]",
				"app": "[variables('redHatTags').app]"
			},
			"properties": {
				"frontendIPConfigurations": [{
					"name": "LoadBalancerFrontEnd",
					"properties": {
						"subnet": {
							"id": "[variables('masterSubnetRef')]"
						  },
						  "privateIPAddress": "[parameters('masterLBIp')]",
						  "privateIPAllocationMethod": "Static"
					}
				}],
				"backendAddressPools": [{
					"name": "loadBalancerBackEnd"
				}],
				"loadBalancingRules": [{
					"name": "OpenShiftAdminConsole",
					"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('masterLbFrontEndConfigId')]"
						},
						"backendAddressPool": {
							"id": "[variables('masterLbBackendPoolId')]"
						},
						"protocol": "Tcp",
						"loadDistribution": "SourceIP",
						"idleTimeoutInMinutes": 30,
						"frontendPort": 8443,
						"backendPort": 8443,
						"probe": {
							"id": "[variables('masterLb8443ProbeId')]"
						}
					}
				}, {
					"name": "CockpitConsole",
					"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('masterLbFrontEndConfigId')]"
						},
						"backendAddressPool": {
							"id": "[variables('masterLbBackendPoolId')]"
						},
						"protocol": "Tcp",
						"loadDistribution": "SourceIP",
						"idleTimeoutInMinutes": 30,
						"frontendPort": 9090,
						"backendPort": 9090,
						"probe": {
							"id": "[variables('masterLbCockpitProbeId')]"
						}
					}
				}],
				"probes": [{
					"name": "8443Probe",
					"properties": {
						"protocol": "Tcp",
						"port": 8443,
						"intervalInSeconds": 5,
						"numberOfProbes": 2
					}
				}, {
					"name": "cockpitProbe",
					"properties": {
						"protocol": "Tcp",
						"port": 9090,
						"intervalInSeconds": 5,
						"numberOfProbes": 2
					}
				}]
			}
		},
		{
			"apiVersion": "[variables('apiVersionNetwork')]",
			"type": "Microsoft.Network/loadBalancers/inboundNatRules",
			"name": "[concat(variables('masterLoadBalancerName'), '/', 'SSH-', variables('openshiftMasterHostname'), copyIndex())]",
			"location": "[variables('location')]",
			"copy": {
				"name": "masterLbLoop",
				"count": "[parameters('masterInstanceCount')]"
			},
			"dependsOn": [
				"[variables('masterLbId')]"
			],
			"properties": {
				"frontendIPConfiguration": {
					"id": "[variables('masterLbFrontEndConfigId')]"
				},
				"protocol": "tcp",
				"frontendPort": "[copyIndex(2200)]",
				"backendPort": 22,
				"enableFloatingIP": false
			}
		},
		{
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('infraLoadBalancerName')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"tags": {
				"displayName": "OpenShiftInfraLB",
				"provider": "[variables('redHatTags').provider]",
				"app": "[variables('redHatTags').app]"
			},
			"dependsOn": [
			],
			"properties": {
				"frontendIPConfigurations": [{
					"name": "LoadBalancerFrontEnd",
					"properties": {
						"subnet": {
							"id": "[variables('masterSubnetRef')]"
						  },
						  "privateIPAddress": "[parameters('infraLBIp')]",
						  "privateIPAllocationMethod": "Static"
					}
				}],
				"backendAddressPools": [{
					"name": "loadBalancerBackEnd"
				}],
				"loadBalancingRules": [{
					"name": "OpenShiftRouterHTTP",
					"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('infraLbFrontEndConfigId')]"
						},
						"backendAddressPool": {
							"id": "[variables('infraLbBackendPoolId')]"
						},
						"protocol": "Tcp",
						"frontendPort": 80,
						"backendPort": 80,
						"probe": {
							"id": "[variables('infraLbHttpProbeId')]"
						}
					}
				}, {
					"name": "OpenShiftRouterHTTPS",
					"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('infraLbFrontEndConfigId')]"
						},
						"backendAddressPool": {
							"id": "[variables('infraLbBackendPoolId')]"
						},
						"protocol": "Tcp",
						"frontendPort": 443,
						"backendPort": 443,
						"probe": {
							"id": "[variables('infraLbHttpsProbeId')]"
						}
					}
				}, {
					"name": "CockpitConsole",
					"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('infraLbFrontEndConfigId')]"
						},
						"backendAddressPool": {
							"id": "[variables('infraLbBackendPoolId')]"
						},
						"protocol": "Tcp",
						"frontendPort": 9090,
						"backendPort": 9090,
						"probe": {
							"id": "[variables('infraLbCockpitProbeId')]"
						}
					}
				}],
				"probes": [{
					"name": "httpProbe",
					"properties": {
						"protocol": "Tcp",
						"port": 80,
						"intervalInSeconds": 5,
						"numberOfProbes": 2
					}
				}, {
					"name": "httpsProbe",
					"properties": {
						"protocol": "Tcp",
						"port": 443,
						"intervalInSeconds": 5,
						"numberOfProbes": 2
					}
				}, {
					"name": "cockpitProbe",
					"properties": {
						"protocol": "Tcp",
						"port": 9090,
						"intervalInSeconds": 5,
						"numberOfProbes": 2
					}
				}]
			}
		}, 
		
		{
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('openshiftMasterHostname'), '-', copyIndex(), '-nic')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"tags": {
				"displayName": "OpenShiftMasterNetworkInterface",
				"provider": "[variables('redHatTags').provider]",
				"app": "[variables('redHatTags').app]"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/loadBalancers/', variables('masterLoadBalancerName'))]",
				"[concat(variables('masterLbId'), '/inboundNatRules/SSH-', variables('openshiftMasterHostname') ,copyIndex())]"
			],
			"copy": {
				"name": "masterNicLoop",
				"count": "[parameters('masterInstanceCount')]"
			},
			"properties": {
				"ipConfigurations": [{
					"name": "[concat(variables('openshiftMasterHostname'), copyIndex(), 'ipconfig')]",
					"properties": {

                        "PrivateIpAddress": "[concat('10.79.77.',copyIndex('masterNicLoop',parameters('masterNodeFirstIp') )]",
                        "PrivateIpAllocationMethod": "Static",

                        "subnet": {
							"id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('vnetRGName'), '/providers/Microsoft.Network/virtualNetworks/', parameters('vnetName'), '/subnets/', parameters('masterSubnetName'))]"
						},
						"loadBalancerBackendAddressPools": [{
							"id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('masterLoadBalancerName'), '/backendAddressPools/loadBalancerBackEnd')]"
						}],
						"loadBalancerInboundNatRules": [
							{
								"id": "[concat(variables('masterLbId'),'/inboundNatRules/SSH-', variables('openshiftMasterHostname'), copyIndex())]"
							}
						]
					}
                }]
			}
		}
             
	],
	"outputs": {
	}
}
